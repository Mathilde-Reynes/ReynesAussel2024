# -*- coding: utf-8 -*-
"""
Created on Tue Aug  6 12:29:23 2024

@author: Mathilde
"""

###Figure 15
n_choice = 22
fig,ax = subplots(7,1, sharex = True,figsize=(19,29))
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start-4]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start-3]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start-2]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start-1]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start]/mV,linewidth=2, color='tab:blue')
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start+1]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start+2]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start+3]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].plot(V2_PYs.t/ms, V2_PYs.v[n_start+4]/mV,linewidth=0.4, color='tab:blue', alpha=0.6)
ax[0].spines['top'].set_visible(False)
ax[0].spines['right'].set_visible(False)
ax[0].spines['bottom'].set_visible(True)
ax[0].spines['left'].set_visible(True)
ax[0].set_xlim([0,10000])
ax[0].yaxis.set_major_locator(MultipleLocator(base=25))
ax[0].tick_params(axis='both', which='major', labelsize=25, width=2)
ax[0].set_title('A. Pyramidal cell', size=30, loc='left')
ax[0].set_ylabel(r'$\mathrm{mV}$',size=30,  labelpad=37)
#
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice-4]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice-3]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice-2]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice-1]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice]/mV,linewidth=2, color="tab:orange")
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice+1]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice+2]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice+3]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].plot(V2_TC_TCo.t/ms, V2_TC_TCo.v[n_choice+4]/mV,linewidth=0.4, color="tab:orange", alpha=0.6)
ax[1].spines['top'].set_visible(False)
ax[1].spines['right'].set_visible(False)
ax[1].spines['bottom'].set_visible(True)
ax[1].spines['left'].set_visible(True)
ax[1].set_xlim([0,10000])
ax[1].yaxis.set_major_locator(MultipleLocator(base=25))
ax[1].tick_params(axis='both', which='major', labelsize=25, width=2)
ax[1].set_title('B. Thalamic relay cell', size=30, loc='left')
ax[1].set_ylabel(r'$\mathrm{mV}$',size=30,  labelpad=37)
#
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice-4]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice-3]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice-2]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice-1]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice]/mV,linewidth=2, color="tab:red")
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice+1]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice+2]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice+3]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].plot(V1_RE_TCo.t/ms, V1_RE_TCo.v[n_choice+4]/mV,linewidth=0.4, color="tab:red", alpha=0.6)
ax[2].spines['top'].set_visible(False)
ax[2].spines['right'].set_visible(False)
ax[2].spines['bottom'].set_visible(True)
ax[2].spines['left'].set_visible(True)
ax[2].set_xlim([0,10000])
ax[2].yaxis.set_major_locator(MultipleLocator(base=25))
ax[2].tick_params(axis='both', which='major', labelsize=25, width=2)
ax[2].set_title('C. Reticular cell', size=30, loc='left')
ax[2].set_ylabel(r'$\mathrm{mV}$',size=30,  labelpad=37)
#
ax[3].plot(I2_TC_TCo.t/ms, I2_TC_TCo.I_t[n_choice]/(0.01*amp*meter**-2),color="black",linewidth=1.5)
ax[3].spines['top'].set_visible(False)
ax[3].spines['right'].set_visible(False)
ax[3].spines['bottom'].set_visible(True)
ax[3].spines['left'].set_visible(True)
ax[3].tick_params(axis='both', which='major', labelsize=25, width=2)
ax[3].set_title('D. Low-threshold calcium current', size=30, loc='left')
ax[3].set_ylabel(r'$1 \, \mathrm{mA} \cdot \mathrm{m}^{-2}$',size=30,  labelpad=25)
ax[3].legend(fontsize=25, loc='lower right')
ax[3].set_xlim([0,10000])
fig.tight_layout()
#
ax[4].plot(I1_RE_TCo.t/ms, I1_RE_TCo.IsynAMPA_PY_RE[n_choice]/(0.01*amp*meter**-2),color="black",linewidth=1.5)
ax[4].spines['top'].set_visible(False)
ax[4].spines['right'].set_visible(False)
ax[4].spines['bottom'].set_visible(True)
ax[4].spines['left'].set_visible(True)
ax[4].tick_params(axis='both', which='major', labelsize=25, width=2)
ax[4].set_title('E. Synaptic AMPA current from PY to RE', size=30, loc='left')
ax[4].set_ylabel(r'$1 \, \mathrm{mA} \cdot \mathrm{m}^{-2}$',size=30,  labelpad=25)
ax[4].legend(fontsize=25, loc='lower right')
ax[4].set_xlabel('ms',size=30,  labelpad=30)
fig.tight_layout()
#plt.savefig('ThalamusSpontaneous.jpg', dpi=300)
ax[5].plot(I2_TC_TCo.t/ms, I2_TC_TCo.ratio[n_choice]/1e7,color="black",linewidth=1.5)
ax[5].set_ylim([0,0.005])
ax[6].plot(I2_TC_TCo.t/ms, I2_TC_TCo.E_ca_Thal[n_choice]/mV,color="black",linewidth=1.5)